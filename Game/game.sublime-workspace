{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"waiting",
				"WaitingBundles"
			],
			[
				"wa",
				"waiting_fibers"
			],
			[
				"array",
				"array_index"
			],
			[
				"arr",
				"array_init"
			],
			[
				"nor",
				"normalize"
			],
			[
				"he",
				"hypotenuse"
			],
			[
				"close",
				"closest_point"
			],
			[
				"delta",
				"delta_n"
			],
			[
				"pos",
				"position"
			],
			[
				"inter",
				"intersection"
			],
			[
				"normal",
				"normalize"
			],
			[
				"pose",
				"pose_storage"
			],
			[
				"no",
				"nominator"
			],
			[
				"aab",
				"aabb"
			],
			[
				"vert",
				"vertex_count"
			],
			[
				"shap",
				"shape"
			],
			[
				"sha",
				"shape"
			],
			[
				"ver",
				"vertices"
			],
			[
				"shape",
				"shape_storage"
			],
			[
				"SHAPE",
				"shape"
			],
			[
				"raycas",
				"raycast_narrowphase"
			],
			[
				"ray",
				"ray_hit"
			],
			[
				"AAB",
				"AABB"
			],
			[
				"ABB",
				"AABBTree"
			],
			[
				"aa",
				"aabb_storage"
			],
			[
				"root",
				"root_id"
			],
			[
				"ro",
				"root_id"
			],
			[
				"paren",
				"parent"
			],
			[
				"parent",
				"parent_id"
			],
			[
				"pare",
				"parent"
			],
			[
				"roo",
				"ROOT_ID"
			],
			[
				"aabb",
				"aabb_tree"
			],
			[
				"in",
				"inv_delta"
			],
			[
				"min",
				"minx"
			],
			[
				"max",
				"maxx"
			],
			[
				"FL",
				"FLT_MIN"
			],
			[
				"inst",
				"instance"
			],
			[
				"lef",
				"left_aabb"
			],
			[
				"a",
				"aabb"
			],
			[
				"A",
				"AABB"
			],
			[
				"shader",
				"shader_ray"
			],
			[
				"Struct",
				"StructB"
			],
			[
				"size",
				"sizeof"
			],
			[
				"Render",
				"RenderMask_Shadow"
			],
			[
				"Ren",
				"RenderMask"
			],
			[
				"Rendermas",
				"RenderMask_All"
			],
			[
				"render",
				"render_mask"
			],
			[
				"light",
				"light_positions"
			],
			[
				"lig",
				"lightmap_color"
			],
			[
				"ligh",
				"light_a"
			],
			[
				"scene",
				"scene_color"
			],
			[
				"mon",
				"monitor"
			],
			[
				"vol",
				"volume"
			],
			[
				"volme",
				"volume_ch2"
			],
			[
				"print",
				"printf\tprintf …"
			],
			[
				"targe",
				"target_volume_ch2"
			],
			[
				"set",
				"set_volume"
			],
			[
				"vo",
				"volume"
			],
			[
				"start",
				"volume_start"
			],
			[
				"channel",
				"channel_count"
			],
			[
				"play",
				"playing"
			],
			[
				"acso",
				"active_sound_count"
			],
			[
				"sound",
				"sound_id"
			],
			[
				"uin",
				"uint8_t"
			],
			[
				"sample",
				"samples_per_frame"
			],
			[
				"int",
				"int16_t"
			],
			[
				"audio",
				"audio_manager"
			],
			[
				"samplec",
				"sample_cf1"
			],
			[
				"wav",
				"wav_buffer"
			],
			[
				"wavs",
				"wav_spec"
			],
			[
				"deve",
				"device_id"
			],
			[
				"audi",
				"audio_pos"
			],
			[
				"speh",
				"sphere_program_id"
			],
			[
				"bloom",
				"bloom_color"
			],
			[
				"scee",
				"scene_color"
			],
			[
				"li",
				"lighted_color"
			],
			[
				"Glu",
				"GLuint"
			],
			[
				"h",
				"hatch"
			],
			[
				"hatch",
				"hatch_texture"
			],
			[
				"hath",
				"hatch_texture"
			],
			[
				"light_",
				"light_radius"
			],
			[
				"bloo",
				"bloom1"
			],
			[
				"blo",
				"bloom1"
			],
			[
				"bl",
				"bloom2"
			],
			[
				"model_",
				"model_id"
			],
			[
				"gl",
				"gl_FragCoord"
			],
			[
				"scre",
				"screen_height"
			],
			[
				"lg",
				"light_position"
			],
			[
				"shadp",
				"shadowmap_position_location"
			],
			[
				"gluin",
				"GLuint"
			],
			[
				"Enti",
				"Entity"
			],
			[
				"id",
				"identity"
			],
			[
				"vec",
				"vec3"
			],
			[
				"shadre",
				"shadow_map_texture_location"
			],
			[
				"shader_",
				"shader_combine"
			],
			[
				"shad",
				"shadow_map"
			],
			[
				"re",
				"resolution"
			],
			[
				"glu",
				"GLuint"
			],
			[
				"sh",
				"shadow_map"
			],
			[
				"screen",
				"screen_width"
			],
			[
				"setu",
				"setup_fbo"
			],
			[
				"inc",
				"inc\t#include \"…\""
			],
			[
				"res",
				"RES_HEIGHT"
			],
			[
				"avatar",
				"avatar_program"
			],
			[
				"entit",
				"entity_count"
			],
			[
				"enti",
				"entities"
			],
			[
				"componen",
				"component_glue"
			],
			[
				"ent",
				"entity"
			],
			[
				"Ent",
				"Entity"
			],
			[
				"en",
				"entity"
			],
			[
				"pr",
				"program"
			],
			[
				"model",
				"model_location"
			],
			[
				"mod",
				"model_id"
			],
			[
				"def",
				"default_view_projection_location"
			],
			[
				"modl",
				"model_ids"
			],
			[
				"progra",
				"program_count"
			],
			[
				"progr",
				"program_count"
			],
			[
				"pro",
				"program"
			],
			[
				"comp",
				"components"
			],
			[
				"insn",
				"instance_count"
			],
			[
				"ins",
				"Instance"
			],
			[
				"glen",
				"GLenum"
			],
			[
				"GLe",
				"GLenum"
			],
			[
				"Model",
				"ModelComponent"
			],
			[
				"po",
				"pose"
			],
			[
				"com",
				"component"
			],
			[
				"ci",
				"children"
			],
			[
				"st",
				"stride"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 87.0,
		"last_filter": "permite",
		"selected_items":
		[
			[
				"permite",
				"Permute Lines: Unique"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"sync+",
				"Set Syntax: C++"
			],
			[
				"Package Control: instal",
				"Package Control: Install Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"syntc++",
				"Set Syntax: C++"
			],
			[
				"syntac++",
				"Set Syntax: C++"
			],
			[
				"sync",
				"Set Syntax: C++"
			],
			[
				"syntaxha",
				"Set Syntax: Haskell"
			],
			[
				"sync++",
				"Set Syntax: C++"
			]
		],
		"width": 485.0
	},
	"console":
	{
		"height": 305.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
	],
	"file_history":
	[
		"/Users/Kalle/Programming/C/RnD/fibers/build.sh",
		"/Users/Kalle/Programming/C/RnD/fibers/tests/producer_consumer/producer_consumer.cpp",
		"/Users/Kalle/Programming/C/RnD/fibers/include/fiber_tasking_lib/fiber.h",
		"/Users/Kalle/Programming/C/RnD/fibers/tests/main.cpp",
		"/Users/Kalle/Programming/C/RnD/fibers/source/task_scheduler.cpp",
		"/Users/Kalle/Programming/C/RnD/fibers/include/fiber_tasking_lib/task_scheduler.h",
		"/Users/Kalle/Programming/C/Game/source/app.cpp",
		"/Users/Kalle/Programming/C/Game/source/camera.cpp",
		"/Users/Kalle/Programming/C/Game/source/component_glue.cpp",
		"/Users/Kalle/Programming/C/Game/source/components/model_component.cpp",
		"/Users/Kalle/Programming/C/Game/source/intersection.cpp",
		"/Users/Kalle/Programming/C/Game/source/components/actor_component.cpp",
		"/Users/Kalle/Programming/C/Game/source/entity_manager.cpp",
		"/Users/Kalle/Programming/C/Game/source/game.cpp",
		"/Users/Kalle/Programming/C/Game/source/default.shader.cpp",
		"/Users/Kalle/Programming/C/Game/source/test.coo",
		"/Users/Kalle/Programming/C/Game/source/physics.cpp",
		"/Users/Kalle/Programming/C/Game/source/test.cpp",
		"/Users/Kalle/Desktop/sötpotatis",
		"/Users/Kalle/Programming/C/Game/rnd/utils/math.inl",
		"/Users/Kalle/Programming/C/RnD/utils/math.inl",
		"/Users/Kalle/Desktop/gavor",
		"/Users/Kalle/Programming/C/Game/rnd/utils/matrix.inl",
		"/Users/Kalle/Programming/C/Game/source/component_manager.cpp",
		"/Users/Kalle/Programming/C/Game/rnd/utils/hashmap.h",
		"/Users/Kalle/Programming/C/RnD/utils/matrix.inl",
		"/Users/Kalle/Programming/C/Game/game.sublime-project",
		"/Users/Kalle/Programming/C/Game/build_dylib.sh",
		"/Users/Kalle/Programming/C/Game/build.sh",
		"/Users/Kalle/Programming/C/Game/source/entity_manager.cpp:35",
		"/Users/Kalle/Downloads/Release/source/opa_save.c",
		"/Users/Kalle/Downloads/Release/source/opa_static_math.c",
		"/Users/Kalle/Downloads/Release/source/opa_parse2.c",
		"/Users/Kalle/Downloads/Release/build.sh",
		"/Users/Kalle/Downloads/Release/OPA_Read_me.txt",
		"/Users/Kalle/Downloads/Release/source/opa_client.c",
		"/Users/Kalle/Downloads/Release/source/b_main.c",
		"/Users/Kalle/Downloads/Release/source/b_macos_main.c",
		"/Users/Kalle/Downloads/Release/source/f_mem_debug.c",
		"/Users/Kalle/Downloads/Release/source/opa_main.c",
		"/Users/Kalle/Downloads/Release/source/opa_pre_processor.c",
		"/Users/Kalle/Downloads/Release/source/opa_internal.h",
		"/Users/Kalle/Downloads/Release/source/i_library.c",
		"/Users/Kalle/Downloads/Release/opa_test_app.c",
		"/Users/Kalle/Downloads/Release/source/betray.h",
		"/Users/Kalle/Programming/C/Game/mygl/build.sh",
		"/Users/Kalle/Downloads/Box2D-master/Box2D/Box2D/Collision/b2DynamicTree.h",
		"/Users/Kalle/Downloads/Box2D-master/Box2D/Box2D/Collision/b2DynamicTree.cpp",
		"/Users/Kalle/Downloads/Box2D-master/Box2D/Box2D/Collision/b2Collision.h",
		"/Users/Kalle/Programming/C/Game/source/renderer.cpp",
		"/Users/Kalle/Programming/HandmadeHero/code/handmade_math.h",
		"/Users/Kalle/Programming/C/RnD/glfw/posix_tls.c",
		"/Users/Kalle/Programming/HandmadeHero/code/handmade_entity.h",
		"/Users/Kalle/Programming/C/RnD/utils/common.h",
		"/Users/Kalle/Programming/HandmadeHero/code/handmade_platform.h",
		"/Users/Kalle/Programming/C/Game/source/avatar.shader.cpp",
		"/Users/Kalle/Programming/C/Game/source/fullscreen_effects.shader.cpp",
		"/Users/Kalle/Programming/C/Dolphin/Source/Core/Common/Assert.h",
		"/Users/Kalle/Programming/C/Game/source/todo.txt",
		"/Users/Kalle/Programming/C/RnD/generated/reload_data_layout.generated.cpp",
		"/Users/Kalle/Downloads/ycmd-master/cpp/BoostParts/boost/chrono/detail/static_assert.hpp",
		"/Users/Kalle/Downloads/ycmd-master/cpp/BoostParts/boost/predef/detail/_cassert.h",
		"/Users/Kalle/Downloads/ycmd-master/cpp/BoostParts/boost/assert.hpp",
		"/Users/Kalle/Programming/C/RnD/shaders/shader.frag",
		"/Users/Kalle/Programming/Unity/Seasons of War/Assets/Editor/DistanceField.cs",
		"/Users/Kalle/Programming/C/Game/source/components/mover_component.cpp",
		"/Users/Kalle/Programming/C/Game/source/components/animation_component.cpp",
		"/Users/Kalle/Programming/C/Game/mygl/mygl.m",
		"/Users/Kalle/Programming/C/Game/source/game.h",
		"/Users/Kalle/Programming/C/Game/source/todo.h",
		"/Users/Kalle/Programming/C/RnD/glfw/cocoa_window.m",
		"/Users/Kalle/Programming/C/Game/mygl/mygl.h",
		"/Users/Kalle/Programming/C/RnD/glfw/cocoa_monitor.m",
		"/Users/Kalle/Programming/C/RnD/glfw/monitor.c",
		"/Users/Kalle/Programming/C/RnD/glfw/window.c",
		"/Users/Kalle/Programming/C/RnD/glfw/internal.h",
		"/Users/Kalle/Programming/C/RnD/glfw/init.c",
		"/Users/Kalle/Programming/C/Game/source/audio_manager.cpp",
		"/Users/Kalle/Programming/C/Game/mygl.m",
		"/Users/Kalle/Programming/C/Game/source/engine/input.cpp",
		"/Users/Kalle/Programming/C/RnD/utils/memory_arena.cpp",
		"/Users/Kalle/Programming/C/Game/source/engine/audio.cpp",
		"/Users/Kalle/Programming/C/Game/source/hashmap.h",
		"/Users/Kalle/Programming/C/Game/source/interface.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/src/core/soloud.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/src/core/soloud_thread.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/src/core/soloud_filter.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/src/core/soloud_file.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/src/core/soloud_fft.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/src/core/soloud_fft_lut.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/src/core/soloud_fader.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/src/core/soloud_core_voiceops.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/src/core/soloud_core_voicegroup.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/src/core/soloud_core_setters.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/src/core/soloud_core_getters.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/src/core/soloud_core_filterops.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/src/core/soloud_core_faderops.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/src/core/soloud_core_basicops.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/src/core/soloud_core_3d.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/src/core/soloud_bus.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/src/core/soloud_audiosource.cpp",
		"/Users/Kalle/Programming/HandmadeHero/code/handmade_audio.cpp",
		"/Users/Kalle/Programming/C/Game/assets/hatch.c",
		"/Users/Kalle/Programming/C/Game/soloud/README.md",
		"/Users/Kalle/Programming/C/Game/soloud/readme.txt",
		"/Users/Kalle/Programming/C/Game/soloud/GUIDELINES",
		"/Users/Kalle/Programming/C/Game/source/input copy.cpp",
		"/Users/Kalle/Programming/C/Game/source/input.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/demos/simplest/main.cpp",
		"/Users/Kalle/Programming/C/Game/soloud/demos/c_test/main.c",
		"/Users/Kalle/Programming/C/Game/soloud/demos/mixbusses/main.cpp",
		"/Users/Kalle/Programming/C/Game/assets/test.wav",
		"/Users/Kalle/Programming/C/Game/source/component_manager.h",
		"/Users/Kalle/Programming/C/Game/source/game.cpp:110",
		"/Users/Kalle/Programming/C/Game/assets/hatch_3.c",
		"/Users/Kalle/Programming/C/Game/assets/hatch_0.c",
		"/Users/Kalle/Programming/C/Game/source/gl_program_builder.cpp",
		"/Users/Kalle/Programming/C/Game/source/gl_errors.cpp",
		"/Users/Kalle/Programming/C/Game/source/animation.h",
		"/Users/Kalle/Programming/C/Game/source/shadow.cpp",
		"/Users/Kalle/Programming/C/Game/source/shadow.shader.cpp",
		"/Users/Kalle/Programming/C/Game/source/rtt.cpp",
		"/Users/Kalle/Programming/C/RnD/source/app.cpp",
		"/Users/Kalle/Downloads/glm/glm/gtx/quaternion.hpp",
		"/Users/Kalle/Downloads/glm/glm/gtx/transform.hpp",
		"/Users/Kalle/Downloads/glm/glm/gtx/quaternion.inl",
		"/Users/Kalle/Downloads/glm/glm/gtx/simd_mat4.inl",
		"/Users/Kalle/Downloads/glm/glm/gtx/transform.inl"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"*.c,*.cpp,*.inl,*.h,*.sh,*.m",
			"*.c,*.cpp,*.inl,*.h,*.sh,*.m,/Users/Kalle/Downloads/Release/source",
			"*.c,*.cpp,*.inl,*.h,*.sh,*.m,/Users/Kalle/Downloads/Box2D-master/Box2D/Box2D",
			"*.c,*.cpp,*.inl,*.h,*.sh,*.m",
			"*.c,*.cpp,*.inl,*.h,*.sh,*.m,,/Users/Kalle/Programming/C/RnD/glfw",
			"*.c,*.cpp,*.inl,*.h,*.sh,*.m,/Users/Kalle/Programming/HandmadeHero/code",
			"*.c,*.cpp,*.inl,*.h,*.sh,*.m",
			"*.c,*.cpp,*.inl,*.h,*.sh",
			"*.c,*.cpp,*.inl,*.h",
			"",
			"/Users/Kalle/Programming/Slayer,*.lua",
			"/Users/Kalle/Programming/Slayer;*.lua",
			"/Users/Kalle/Programming/Slayer",
			"/Users/Kalle/Downloads/glm/glm",
			"*.lua",
			".*lua",
			"",
			"*.cpp",
			".cpp"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"GLSL",
			"boost",
			"m_quit",
			"m_waitingBundles",
			"m_waitingFiber",
			"uint",
			"m_waitingFibers",
			"m_freeFibers",
			"m_fibers",
			"m_fiberPoolSize",
			"m_threads",
			"m_tls",
			"m_waitingFibers",
			"m_freeFibers",
			"m_fibers",
			"m_fiberPoolSize",
			"m_numThreads",
			"TaskScheduler",
			"taskScheduler",
			"freeFiberIndex",
			"CurrentFiberIndex",
			"GetNextFreeFiberIndex",
			"shader_light",
			"inv_delta",
			"irrr",
			"ResultRayRay",
			"ResultRayAABB",
			"IntersectionResultRayRay",
			"IntersectionResultRayAABB",
			"t, nx, ny",
			"t, nx, n",
			"RayAABBIntersectionResult",
			"IntersectionResult",
			"p2.y * d2.x",
			"p1.y * d2.x",
			"c.",
			"b.",
			"a.",
			"doit",
			"time2",
			"abs",
			"time2",
			"transform_vertex",
			"update_vertices",
			"32",
			"rr2",
			"    ",
			"remove",
			"parent_id",
			"parent",
			"p_id",
			"p->",
			"p->id",
			">id",
			"parent_id",
			"parent",
			"-1",
			"NULL_ID",
			"cursor",
			"used_ids",
			"\"command\"",
			"when\":",
			"\"when\": \"inDebug",
			"\"when\"",
			"aabb",
			"shape",
			"ray",
			"raycast",
			"insert_node",
			"did_hit",
			"tmin",
			"doit",
			" main\\(",
			"main\\(",
			"opa_type_size_compute",
			"main",
			"opa_type_size_compute",
			"opa_parse_typedefs",
			"opa_parse_type",
			"opa_parse_",
			"opa_options_init",
			"Wno-",
			"[-W",
			"-Wn",
			"[-W",
			"warning",
			"opa_parse_typedefs",
			"b_main",
			"b_main.c",
			"betray_action_func_set",
			"did_hit",
			"    ",
			"parent",
			"0",
			"aabbs",
			"get_new_id",
			"b2TestOverlap",
			"rs",
			"div",
			"inv_dir",
			"component",
			"r.inv_dir",
			"r.from",
			"r.",
			"double",
			"aabb",
			"aabb_",
			"AABB",
			"aabb",
			"FLT_MAX",
			"Model",
			"aabb_id",
			"AABB",
			"aabb",
			"AABB",
			"parent",
			"root",
			"id",
			"set_rotatation",
			"light",
			"360",
			"inline",
			"sample_distance",
			"color",
			"info",
			"add_program",
			"shader_sphere",
			"lightmap"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"CALL",
			"COMMAND",
			"m4",
			"\\1+1",
			"",
			"NR_PARTICLES",
			"\\t",
			"V2",
			"v2"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 187.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/Game.sublime-build",
	"project": "game.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"fibe",
				"RnD/fibers/include/fiber_tasking_lib/fiber.h"
			],
			[
				"tasksc",
				"RnD/fibers/include/fiber_tasking_lib/task_scheduler.h"
			],
			[
				"tasksce",
				"RnD/fibers/source/task_scheduler.cpp"
			],
			[
				"math",
				"Game/rnd/utils/math.inl"
			],
			[
				"inter",
				"Game/source/intersection.cpp"
			],
			[
				"physic",
				"Game/source/physics.cpp"
			],
			[
				"game",
				"Game/source/game.cpp"
			],
			[
				"glue",
				"Game/source/component_glue.cpp"
			],
			[
				"en",
				"Game/source/entity_manager.cpp"
			],
			[
				"comp",
				"Game/source/component_manager.cpp"
			],
			[
				"model",
				"Game/source/components/model_component.cpp"
			],
			[
				"actor",
				"Game/source/components/actor_component.cpp"
			],
			[
				"gmaec",
				"Game/source/game.cpp"
			],
			[
				"gmae",
				"Game/game.sublime-project"
			],
			[
				"comglue",
				"Game/source/component_glue.cpp"
			],
			[
				"entyi",
				"Game/source/entity_manager.cpp"
			],
			[
				"build",
				"Game/build.sh"
			],
			[
				"opa",
				"source/opa_parse2.c"
			],
			[
				"opastati",
				"source/opa_static_math.c"
			],
			[
				"opaprep",
				"source/opa_pre_processor.c"
			],
			[
				"opapar",
				"source/opa_parse2.c"
			],
			[
				"fmemde",
				"source/f_mem_debug.c"
			],
			[
				"opapa",
				"source/opa_parse2.c"
			],
			[
				"opamain",
				"source/opa_main.c"
			],
			[
				"fmem",
				"source/f_mem_debug.c"
			],
			[
				"opasave",
				"source/opa_save.c"
			],
			[
				"opamath",
				"source/opa_static_math.c"
			],
			[
				"buil",
				"Game/build.sh"
			],
			[
				"bu",
				"Game/mygl/build.sh"
			],
			[
				"entr",
				"Game/source/entity_manager.cpp"
			],
			[
				"shader",
				"Game/source/default.shader.cpp"
			],
			[
				"phys",
				"Game/source/physics.cpp"
			],
			[
				"actorcom",
				"Game/source/components/actor_component.cpp"
			],
			[
				"handmath",
				"code/handmade_math.h"
			],
			[
				"matrix",
				"RnD/utils/matrix.inl"
			],
			[
				"pos",
				"RnD/glfw/posix_tls.c"
			],
			[
				"comm",
				"RnD/utils/common.h"
			],
			[
				"com",
				"Game/source/component_manager.cpp"
			],
			[
				"modelc",
				"Game/source/components/model_component.cpp"
			],
			[
				"avatar",
				"Game/source/avatar.shader.cpp"
			],
			[
				"defaul",
				"Game/source/default.shader.cpp"
			],
			[
				"buildd",
				"Game/build_dylib.sh"
			],
			[
				"myglbu",
				"Game/mygl/build.sh"
			],
			[
				"common",
				"RnD/utils/common.h"
			],
			[
				"reload",
				"RnD/generated/reload_data_layout.generated.cpp"
			],
			[
				"bui",
				"Game/build.sh"
			],
			[
				"deafu",
				"Game/source/default.shader.cpp"
			],
			[
				"shadef",
				"RnD/shaders/shader.frag"
			],
			[
				"fulls",
				"Game/source/fullscreen_effects.shader.cpp"
			],
			[
				"defea",
				"Game/source/default.shader.cpp"
			],
			[
				"defa",
				"Game/source/default.shader.cpp"
			],
			[
				"ren",
				"Game/source/renderer.cpp"
			],
			[
				"fullsc",
				"Game/source/fullscreen_effects.shader.cpp"
			],
			[
				"gamecp",
				"Game/source/game.cpp"
			],
			[
				"como",
				"Game/source/components/mover_component.cpp"
			],
			[
				"render",
				"Game/source/renderer.cpp"
			],
			[
				"fullscree",
				"Game/source/fullscreen_effects.shader.cpp"
			],
			[
				"enmana",
				"Game/source/entity_manager.cpp"
			],
			[
				"comlgue",
				"Game/source/component_glue.cpp"
			],
			[
				"anima",
				"Game/source/components/animation_component.cpp"
			],
			[
				"gamec",
				"Game/source/game.cpp"
			],
			[
				"ent",
				"Game/source/entity_manager.cpp"
			],
			[
				"comgl",
				"Game/source/component_glue.cpp"
			],
			[
				"app",
				"Game/source/app.cpp"
			],
			[
				"mygl",
				"Game/mygl/mygl.m"
			],
			[
				"avatr",
				"Game/source/avatar.shader.cpp"
			],
			[
				"aavart",
				"Game/source/avatar.shader.cpp"
			],
			[
				"camera",
				"Game/source/camera.cpp"
			],
			[
				"full",
				"Game/source/fullscreen_effects.shader.cpp"
			],
			[
				"inp",
				"Game/source/engine/input.cpp"
			],
			[
				"memor",
				"RnD/utils/memory_arena.cpp"
			],
			[
				"mat",
				"RnD/utils/math.inl"
			],
			[
				"audi",
				"Game/source/engine/audio.cpp"
			],
			[
				"aud",
				"Game/source/engine/audio.cpp"
			],
			[
				"audip",
				"Game/source/engine/audio.cpp"
			],
			[
				"gamecpp",
				"Game/source/game.cpp"
			],
			[
				"handmadau",
				"code/handmade_audio.cpp"
			],
			[
				"hat",
				"Game/assets/hatch.c"
			],
			[
				"avatarh",
				"Game/source/avatar.shader.cpp"
			],
			[
				"animaion",
				"Game/source/components/animation_component.cpp"
			],
			[
				"shadercpp",
				"Game/source/fullscreen_effects.shader.cpp"
			],
			[
				"default",
				"Game/source/default.shader.cpp"
			],
			[
				"came",
				"Game/source/camera.cpp"
			],
			[
				"shadsha",
				"Game/source/shadow.shader.cpp"
			],
			[
				"rtt",
				"Game/source/rtt.cpp"
			],
			[
				"matr",
				"RnD/utils/matrix.inl"
			],
			[
				"mo",
				"Game/source/components/model_component.cpp"
			],
			[
				"gamp",
				"Game/source/game.cpp"
			],
			[
				"mybu",
				"Game/mygl/build.sh"
			],
			[
				"build.s",
				"Game/build.sh"
			],
			[
				"input",
				"Game/source/input.cpp"
			],
			[
				"app.c",
				"RnD/source/app.cpp"
			],
			[
				"def",
				"Game/source/default.shader.cpp"
			],
			[
				"shadow",
				"Game/source/shadow.shader.cpp"
			],
			[
				"gler",
				"Game/source/gl_errors.cpp"
			],
			[
				"gamc",
				"Game/source/game.cpp"
			],
			[
				"rtts",
				"Game/source/rtt.shader.cpp"
			],
			[
				"glprogr",
				"RnD/opengl/gl_program_builder.cpp"
			],
			[
				"glprogram",
				"Game/source/gl_program_builder.cpp"
			],
			[
				"shad",
				"RnD/shaders/shader.frag"
			],
			[
				"testver",
				"Game/source/test.vert"
			],
			[
				"animation",
				"Game/source/components/animation_component.cpp"
			],
			[
				"entity",
				"Game/source/entity_manager.cpp"
			],
			[
				"hashma",
				"Game/source/hashmap.h"
			],
			[
				"hash",
				"RnD/utils/hashmap.cpp"
			],
			[
				"enti",
				"Game/source/entity_manager.cpp"
			],
			[
				"avata",
				"Game/source/avatar.cpp"
			],
			[
				"pose",
				"Game/source/components/pose_component.cpp"
			],
			[
				"anim",
				"Game/source/components/animation_component.cpp"
			],
			[
				"myglbui",
				"Game/mygl/build.sh"
			],
			[
				"avat",
				"Game/source/avatar.cpp"
			],
			[
				"entit",
				"Game/source/entity_spawner.cpp"
			],
			[
				"pre",
				"Game/out/preprocess.cpp"
			],
			[
				"ava",
				"Game/source/avatar.cpp"
			],
			[
				"animationcom",
				"Game/animation_compiler/animation_compiler.cpp"
			],
			[
				"spinn",
				"Game/assets/spinning.dae"
			],
			[
				"anig",
				"Game/generated/animations.generated.cpp"
			],
			[
				"gener",
				"Game/generated/animations.generated.cpp"
			],
			[
				"buildand",
				"Game/animation_compiler/build_and_run.sh"
			],
			[
				"spinnin",
				"Game/assets/spinning.dae"
			],
			[
				"burun",
				"Game/animation_compiler/build_and_run.sh"
			],
			[
				"enty",
				"Game/source/entity_spawner.cpp"
			],
			[
				"simple",
				"Game/assets/simple.dae"
			],
			[
				"parser",
				"RnD/utils/parser.cpp"
			],
			[
				"string",
				"RnD/utils/string_utils.inl"
			],
			[
				"genere",
				"Game/generated/animations.generated.cpp"
			],
			[
				"rela",
				"RnD/reload/parse_data_layout.cpp"
			],
			[
				"relo",
				"RnD/reload/reloader.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Programming/C/RnD/rnd.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"UAvatarComponent"
			]
		],
		"width": 609.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 4
	}
}
