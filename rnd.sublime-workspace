{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ASSERT_TOK",
				"ASSERT_TOKEN_TYPE"
			],
			[
				"ASSERT",
				"ASSERT_TOKEN"
			],
			[
				"set",
				"setup_vertex_array"
			],
			[
				"tls",
				"tls_array"
			],
			[
				"u",
				"uint64"
			],
			[
				"siz",
				"size"
			],
			[
				"clear",
				"clear_to_zero"
			],
			[
				"push",
				"PUSH_STRUCTS"
			],
			[
				"job",
				"job_handle_counter"
			],
			[
				"si",
				"size_t"
			],
			[
				"bundle",
				"bundle_storage"
			],
			[
				"task",
				"task_count"
			],
			[
				"bund",
				"bundle_storage"
			],
			[
				"array",
				"ARRAY_COUNT"
			],
			[
				"last",
				"last_free_bundle"
			],
			[
				"Thea",
				"ThreadLocalStorage"
			],
			[
				"align",
				"alignment"
			],
			[
				"Memo",
				"MemoryArena"
			],
			[
				"memo",
				"memory_protect"
			],
			[
				"relea",
				"__ATOMIC_RELEASE"
			],
			[
				"rela",
				"__ATOMIC_RELAXED"
			],
			[
				"at",
				"atomic_uint"
			],
			[
				"fiberpoo",
				"FIBER_POOL_SIZE"
			],
			[
				"thread",
				"thread_index"
			],
			[
				"prin",
				"printf\tprintf …"
			],
			[
				"broa",
				"broadphase"
			],
			[
				"inval",
				"invalid_hash"
			],
			[
				"rand",
				"random01"
			],
			[
				"num",
				"num_handles"
			],
			[
				"handl",
				"handles"
			],
			[
				"bra",
				"broadphase_add"
			],
			[
				"bro",
				"broadphase"
			],
			[
				"inva",
				"invalid_hash"
			],
			[
				"in",
				"inc\t#include \"…\""
			],
			[
				"brao",
				"BROADPHASE_SIZE"
			],
			[
				"ent",
				"entries"
			],
			[
				"Broad",
				"Broadphase"
			],
			[
				"br",
				"broadphase_index"
			],
			[
				"broad",
				"broadphase_index"
			],
			[
				"en",
				"entry"
			],
			[
				"Hash",
				"HashEntry"
			],
			[
				"PROFILER_s",
				"PROFILER_STOP"
			],
			[
				"mo",
				"_move_into_place_itr"
			],
			[
				"remove",
				"_remove_lookups_itr"
			],
			[
				"_",
				"_move_into_place_itr"
			],
			[
				"movi",
				"_move_into_place"
			],
			[
				"hash",
				"hashmap"
			],
			[
				"jum",
				"jump_distance"
			],
			[
				"hahma",
				"hashmap"
			],
			[
				"has",
				"hashmap"
			],
			[
				"invalid",
				"invalid_key"
			],
			[
				"opti",
				"optimal_hash"
			],
			[
				"bue",
				"BUCKET_SIZE"
			],
			[
				"hashma",
				"hashmap"
			],
			[
				"entr",
				"entries"
			],
			[
				"hahs",
				"hash_size"
			],
			[
				"Hahs",
				"HashMap"
			],
			[
				"enti",
				"entity"
			],
			[
				"bucke",
				"BUCKET_SIZE"
			],
			[
				"HASH",
				"hash_size"
			],
			[
				"slot",
				"slot_hash"
			],
			[
				"other",
				"other_hash"
			],
			[
				"uni",
				"unsigned"
			],
			[
				"iter",
				"ITER_FRAGMENT"
			],
			[
				"K",
				"Kalle"
			],
			[
				"least",
				"least_addr"
			],
			[
				"malloc",
				"malloc_chunk"
			],
			[
				"seon",
				"second_memory"
			],
			[
				"ASS",
				"ASSERT"
			],
			[
				"ver",
				"vertex_index_count"
			],
			[
				"verind",
				"vertex_index_count"
			],
			[
				"vert",
				"vertex_indices"
			],
			[
				"verc",
				"vertex_color_count"
			],
			[
				"vertne",
				"vertex_normal_count"
			],
			[
				"tex",
				"tex_coord_count"
			],
			[
				"numb",
				"number"
			],
			[
				"nex",
				"next_number"
			],
			[
				"number",
				"TokenType_Number"
			],
			[
				"tok",
				"tok"
			],
			[
				"Toke",
				"Tokenizer"
			],
			[
				"Token",
				"TokenType_Identifier"
			],
			[
				"pop",
				"POPULATION_SIZE"
			],
			[
				"choi",
				"choice"
			],
			[
				"allcho",
				"all_choices_size"
			],
			[
				"wor",
				"word"
			],
			[
				"strin",
				"strings"
			],
			[
				"maxo",
				"maxrow"
			],
			[
				"min",
				"mincol"
			],
			[
				"choic",
				"choice"
			],
			[
				"St",
				"String"
			],
			[
				"grid",
				"grid_index"
			],
			[
				"st",
				"stdout"
			],
			[
				"seled",
				"selected_size"
			],
			[
				"random",
				"random_index"
			],
			[
				"mom",
				"mom_index"
			],
			[
				"new",
				"new_size"
			],
			[
				"gri",
				"grid_index"
			],
			[
				"frac",
				"frac_y"
			],
			[
				"mass",
				"massy1"
			],
			[
				"fra",
				"frac_x"
			],
			[
				"gau",
				"pthread_gauss_seidel_itr_task"
			],
			[
				"mempo",
				"mempory"
			],
			[
				"den",
				"density_pressure"
			],
			[
				"dens",
				"density_pressure"
			],
			[
				"pos",
				"positions"
			],
			[
				"acc",
				"accelerations"
			],
			[
				"ini",
				"Initialized"
			],
			[
				"ne",
				"neighbor_values"
			],
			[
				"Jaco",
				"JacobianEntry"
			],
			[
				"di",
				"d_i"
			],
			[
				"v2",
				"V2"
			],
			[
				"NEIG",
				"FOR_ALL_NEIGHBORS"
			],
			[
				"fluid",
				"fluid_common"
			],
			[
				"wide",
				"integrate_wide_boundary_projection"
			],
			[
				"flud",
				"fluid_common"
			],
			[
				"ind",
				"index"
			],
			[
				"temp",
				"temp_2"
			],
			[
				"pro",
				"project_boundary"
			],
			[
				"max",
				"max_neighbors"
			],
			[
				"mem",
				"memset"
			],
			[
				"gas",
				"gauss_seidel_iter"
			],
			[
				"gause",
				"gauss_seidel_init"
			],
			[
				"ga",
				"gauss_seidel_iter"
			],
			[
				"PROFI",
				"PROFILER_START"
			],
			[
				"spook",
				"spook"
			],
			[
				"my",
				"my_element"
			],
			[
				"cell",
				"CELL_SIZE_Y"
			],
			[
				"ST",
				"START"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"syna",
				"Set Syntax: C++"
			],
			[
				"syn",
				"Set Syntax: C++"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"sync+",
				"Set Syntax: C++"
			],
			[
				"Package Control: instal",
				"Package Control: Install Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"syntc++",
				"Set Syntax: C++"
			],
			[
				"syntac++",
				"Set Syntax: C++"
			],
			[
				"sync",
				"Set Syntax: C++"
			],
			[
				"syntaxha",
				"Set Syntax: Haskell"
			],
			[
				"sync++",
				"Set Syntax: C++"
			]
		],
		"width": 485.0
	},
	"console":
	{
		"height": 305.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/Kalle/Programming/C/RnD"
	],
	"file_history":
	[
		"/Users/Kalle/Programming/C/RnD/build_all.sh",
		"/Users/Kalle/Programming/C/RnD/reload/parse_data_layout.cpp",
		"/Users/Kalle/Programming/C/RnD/source/buffer.cpp",
		"/Users/Kalle/Programming/C/RnD/generated/setup_vertex_array.cpp",
		"/Users/Kalle/Programming/C/RnD/utils/font_loader.cpp",
		"/Users/Kalle/Programming/C/RnD/external tools/obj_compiler/obj_compiler.cpp",
		"/Users/Kalle/Programming/C/RnD/utils/parser.cpp",
		"/Users/Kalle/Programming/C/RnD/utils/common.h",
		"/Users/Kalle/Programming/C/RnD/source/fluid_common.cpp",
		"/Users/Kalle/Programming/C/RnD/source/fluid_spook_pthread.cpp",
		"/Users/Kalle/Programming/C/RnD/generated/reload_data_layout.generated.cpp",
		"/Users/Kalle/Programming/C/RnD/utils/matrix.inl",
		"/Users/Kalle/Programming/C/RnD/parse_data_layout.cpp",
		"/Users/Kalle/Programming/C/RnD/opencl/build.sh",
		"/Users/Kalle/Library/Application Support/Sublime Text 3/Packages/User/build_rnd.sublime-build",
		"/Users/Kalle/Programming/C/RnD/opengl/gl_parser.cpp",
		"/Users/Kalle/Programming/C/RnD/source/interface.cpp",
		"/Users/Kalle/Programming/C/RnD/opencl/parse_and_compile.sh",
		"/Users/Kalle/Programming/C/RnD/build_mygl.sh",
		"/Users/Kalle/Programming/C/RnD/opencl/cl_parser.cpp",
		"/Users/Kalle/Programming/C/RnD/opengl/run_parser.sh",
		"/Users/Kalle/Programming/C/RnD/opengl/build.sh",
		"/Users/Kalle/Programming/C/RnD/rnd.sublime-project",
		"/Users/Kalle/Programming/C/RnD/mygl/mygl.m",
		"/Users/Kalle/Programming/C/RnD/cl_parser.cpp",
		"/Users/Kalle/Programming/C/RnD/mygl/build.sh",
		"/Users/Kalle/Programming/C/RnD/mygl/build_rel.sh",
		"/Users/Kalle/Programming/C/RnD/Game/build.sh",
		"/Users/Kalle/Programming/C/RnD/Game/build_dylib.sh",
		"/Users/Kalle/Programming/C/RnD/mygl.m",
		"/Users/Kalle/Programming/C/RnD/rnd.sublime-workspace",
		"/Users/Kalle/Programming/C/RnD/fibers/asm/make_x86_64_sysv_macho_gas.S",
		"/Users/Kalle/Programming/C/RnD/fibers/wait_free_queue.h",
		"/Users/Kalle/Programming/C/RnD/fibers/task_scheduler.h",
		"/Users/Kalle/Programming/C/RnD/fibers/task_scheduler.cpp",
		"/Users/Kalle/Programming/C/RnD/fibers/tests/triangle_number/calc_triangle_num.cpp",
		"/Users/Kalle/Programming/C/RnD/fibers/wait_free_queue_old.h",
		"/Users/Kalle/Programming/C/RnD/fibers/main.cpp",
		"/Users/Kalle/Downloads/FiberTaskingLib-master/source/task_scheduler.cpp",
		"/Users/Kalle/Programming/C/RnD/fibers/task_scheduler copy.cpp",
		"/Users/Kalle/Programming/C/RnD/utils/memory_arena.cpp",
		"/Users/Kalle/Programming/C/RnD/fibers/asm/blah.S",
		"/Users/Kalle/Downloads/FiberTaskingLib-master/include/fiber_tasking_lib/fiber.h",
		"/Users/Kalle/Programming/C/RnD/fibers/asm/make_x86_64_ms_pe_gas.S",
		"/Users/Kalle/Programming/C/RnD/fibers/asm/jump_x86_64_sysv_macho_gas.S",
		"/Users/Kalle/Programming/C/RnD/fibers/fiber.h",
		"/Users/Kalle/Downloads/FiberTaskingLib-master/include/fiber_tasking_lib/task_scheduler.h",
		"/Users/Kalle/Programming/C/RnD/fibers/build.sh",
		"/Users/Kalle/Programming/C/RnD/fibers/fibers",
		"/Users/Kalle/Programming/C/RnD/fibers/asm/jump_x86_64_ms_pe_gas.S",
		"/Users/Kalle/Programming/C/RnD/fibers/thread_abstraction.h",
		"/Users/Kalle/Programming/C/RnD/fibers/memory.h",
		"/Users/Kalle/Programming/C/RnD/utils/dlmalloc_full.c",
		"/Users/Kalle/Programming/C/Game/source/game.h",
		"/Users/Kalle/Programming/C/Game/source/avatar.shader.cpp",
		"/Users/Kalle/Programming/C/Game/source/default.shader.cpp",
		"/Users/Kalle/Library/Application Support/Sublime Text 3/Packages/User/build_fiber.sublime-build",
		"/Users/Kalle/Programming/C/RnD/fibers/source/wait_free_queue.h",
		"/Users/Kalle/Library/Application Support/Sublime Text 3/Packages/User/build_dylib.sublime-build",
		"/Users/Kalle/Programming/C/RnD/fibers/config.h",
		"/Users/Kalle/Programming/C/RnD/fibers/task.h",
		"/Users/Kalle/Programming/C/RnD/fibers/source/task_scheduler.cpp",
		"/Users/Kalle/Programming/C/RnD/fibers/source/wait_free_queue_old.h",
		"/Users/Kalle/Library/Application Support/Sublime Text 3/Packages/User/build_gltest.sublime-build",
		"/Users/Kalle/Library/Application Support/Sublime Text 3/Packages/User/build_interface.sublime-build",
		"/Users/Kalle/Library/Application Support/Sublime Text 3/Packages/User/build_on_save.py",
		"/Users/Kalle/Library/Application Support/Sublime Text 3/Packages/User/build_test.sublime-build",
		"/Users/Kalle/Programming/C/RnD/fibers/source/task_scheduler.h",
		"/Users/Kalle/Programming/C/RnD/build_dylib.sh",
		"/Users/Kalle/Programming/C/source/thread_abstraction.h",
		"/Users/Kalle/Programming/C/RnD/source/thread_abstraction.h",
		"/Users/Kalle/Library/Application Support/Sublime Text 3/Packages/User/untitled.sublime-build",
		"/Users/Kalle/Library/Application Support/Sublime Text 3/Packages/User/build.sublime-build",
		"/Users/Kalle/Programming/C/RnD/fibers/source/task.h",
		"/Users/Kalle/Programming/C/RnD/fibers/source/thread_abstraction.h",
		"/Users/Kalle/Programming/C/RnD/fibers/source/config.h",
		"/Users/Kalle/Programming/C/RnD/fibers/source/fiber.h",
		"/Users/Kalle/Programming/C/RnD/fibers/source/memory.h",
		"/Users/Kalle/Programming/HandmadeHero/code/handmade_math.h",
		"/Users/Kalle/Programming/C/RnD/fibers/include/fiber_tasking_lib/thread_abstraction.h",
		"/Users/Kalle/Programming/C/RnD/fibers/source/typedefs.h",
		"/Users/Kalle/Programming/C/RnD/fibers/tests/main.cpp",
		"/Users/Kalle/Programming/C/RnD/fibers/include/fiber_tasking_lib/fiber.h",
		"/Users/Kalle/Programming/C/RnD/fibers/include/fiber_tasking_lib/task_scheduler.h",
		"/Users/Kalle/Programming/C/RnD/fibers/include/fiber_tasking_lib/memory.h",
		"/Users/Kalle/Programming/C/Game/source/game.cpp",
		"/Users/Kalle/Programming/C/RnD/utils/hashmap.cpp",
		"/Users/Kalle/Programming/C/RnD/shaders/fluid_common.cl",
		"/Users/Kalle/Programming/C/RnD/source/app.cpp",
		"/Users/Kalle/Programming/C/RnD/utils/broadphase.h",
		"/Users/Kalle/Documents/Silhouette of a person",
		"/Users/Kalle/Programming/C/Game/source/interface.cpp",
		"/Users/Kalle/Programming/C/Game/source/app.cpp",
		"/Users/Kalle/Library/Application Support/Sublime Text 3/Packages/User/Game.sublime-build",
		"/Users/Kalle/Programming/C/Game/source/build_dylib.sh",
		"/Users/Kalle/Programming/C/Game/source/build_all.sh",
		"/Users/Kalle/Programming/C/Game/source/app.h",
		"/Users/Kalle/Programming/C/Game/source/common.h",
		"/Users/Kalle/Programming/C/RnD/utils/hashmap.h",
		"/Users/Kalle/Programming/C/RnD/utils/broadphase.cpp",
		"/Users/Kalle/Programming/Karabiner/Karabiner-Elements/src/core/grabber/main.cpp",
		"/Users/Kalle/Programming/C/RnD/reload/reloader.cpp",
		"/Users/Kalle/Programming/C/RnD/genome/all_ones.cpp",
		"/Users/Kalle/Programming/C/RnD/utils/profiler.c",
		"/Users/Kalle/Downloads/interactable_component.h",
		"/Users/Kalle/Programming/C/RnD/utils/interactable_component.cpp",
		"/Users/Kalle/Programming/C/RnD/genome/build.sh",
		"/Users/Kalle/Programming/C/RnD/testing and benchmarks/sorting/quick_sort_benchmark.cpp",
		"/Users/Kalle/Programming/C/RnD/external tools/font_builder/font_builder.c",
		"/Users/Kalle/Programming/C/RnD/source/fluid.cpp",
		"/Users/Kalle/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/Kalle/Documents/shadertoy.cpp",
		"/Users/Kalle/Programming/C/RnD/shaders/shader.vert",
		"/Users/Kalle/Programming/C/RnD/shaders/shader.frag",
		"/Users/Kalle/Programming/C/RnD/libclang/build.bat",
		"/Users/Kalle/Programming/C/RnD/libclang/clang-c/Index.h",
		"/Users/Kalle/Programming/C/RnD/libclang/main.h",
		"/Users/Kalle/Programming/C/RnD/libclang/main.cpp",
		"/Users/Kalle/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/Kalle/Programming/C/RnD/source/fluid_mpm.cpp",
		"/Users/Kalle/Programming/C/RnD/libclang/build.sh",
		"/Users/Kalle/Programming/C/RnD/libclang/clang-c/BuildSystem.h",
		"/Users/Kalle/Programming/C/RnD/libclang/clang-c/CXCompilationDatabase.h",
		"/Users/Kalle/Programming/C/RnD/libclang/clang-c/CXErrorCode.h",
		"/Users/Kalle/Programming/C/RnD/libclang/clang-c/CXString.h",
		"/Users/Kalle/Programming/C/RnD/libclang/clang-c/Documentation.h",
		"/Users/Kalle/Programming/C/RnD/libclang/clang-c/Platform.h",
		"/Users/Kalle/Programming/C/RnD/testing and benchmarks/mandelbrot/run_iaca"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"*.c,*.cpp,*.inl,*.h,*.sh,*.m,*.mm,*.cs,*.asm,*.S",
			"*.c,*.cpp,*.inl,*.h,*.sh,*.m,*.mm,*.cs,*.asm",
			"*.c,*.cpp,*.inl,*.h,*.sh,*.m,*.mm,*.cs",
			"*.c,*.cpp,*.inl,*.h,*.sh,*.m,*.mm",
			"*.c,*.cpp,*.inl,*.h,*.sh,*.m,*.mm,/Users/Kalle/Downloads/glfw-3.1.2/src",
			"*.c,*.cpp,*.inl,*.h,*.sh,*.m,/Users/Kalle/Downloads/glfw-3.1.2/src",
			"*.c,*.cpp,*.inl,*.h,*.sh,/Users/Kalle/Downloads/glfw-3.1.2/src",
			"*.c,*.cpp,*.inl,*.h,*.sh",
			"*.c,*.cpp,*.inl,*.h",
			"",
			"/Users/Kalle/Programming/Slayer,*.lua",
			"/Users/Kalle/Programming/Slayer;*.lua",
			"/Users/Kalle/Programming/Slayer",
			"/Users/Kalle/Downloads/glm/glm",
			"*.lua",
			".*lua",
			"",
			"*.cpp",
			".cpp"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"ASSERT_MSG",
			"matrix4x4",
			"ASSERT(parser::is_equal(parser::next_token(&tok), TOKENIZE",
			"ASSERT(parser::is_equal(token, TOKENIZE",
			"ASSERT_MSG",
			"temp",
			"FBCONFIG_STEREO",
			"fiber_index",
			"numTasks",
			"numAdditionsPerTask",
			"triangleNum",
			"FIBER_POOL_SIZE",
			"get_ne",
			"RDX",
			"ThreadFiber",
			"thread_fiber",
			"storage",
			"/*",
			"rsi",
			"sp",
			"*/\n",
			"make_fcontext",
			"rsp",
			"main_fiber_s",
			"ThreadFiber",
			"threadFiber",
			"tls_array",
			"jobs",
			"get_current_thread_index",
			"job_handle",
			"wait_for_job",
			"job_handle",
			"add_tasks",
			"WaitForCounter",
			"AddTasks",
			"job",
			"Counter",
			"counter",
			"uint",
			"unsigned",
			"getpagesize",
			"'",
			"pageSize",
			"thread_start",
			"printf(\"Hello",
			"ToWaiting",
			"m_waitingFibers",
			"ToWaiting",
			"CleanUpOldFiber",
			"Waiting",
			"waiting_fiber",
			"previous_fiber_destination",
			"ToWaiting",
			"FiberDestination_ToWaiting",
			"m_waitingFibers",
			"SystemPageSize",
			"MemoryArena arena",
			"taskScheduler",
			"AddTasks",
			"FiberTaskingLib::",
			"FiberTaskingLib::T",
			"TaskBundle",
			"job_index",
			"counter",
			"GLSL",
			"_jump_fcontext",
			"free_fiber_cursor",
			"scheduler->tls[",
			"scheduler->tls",
			"last_free_bundle",
			"ARRAY_SIZE",
			"AddTasks",
			"add_tasks",
			"SizeInit",
			"Result",
			"arena.Used",
			"arena.Base",
			"memory_arena",
			"PushSize_",
			"Arena",
			"Size",
			"GetEffectiveSizeFor",
			"get_alignment_offset",
			"Arena->",
			"alignmentMask",
			"Alignment",
			"GetAlignmentOffset",
			"memory_index",
			"threadPoolSize",
			"mainTaskArg",
			"mainTask",
			"fiberPoolSize",
			"__ATOMIC_AQUIRE",
			"numTasks",
			"Queue",
			"FiberDestination::",
			"AlignedFree",
			"MemoryGuardRelease",
			"MemoryGuard",
			"MemoryGuardRelease",
			"\n\t",
			"acquire",
			"size_t",
			"TaskBundle",
			"a->size",
			"a->buffer[",
			"__atomic_store_explicit",
			"Array",
			"WaitFreeQueue",
			"Deque",
			"release",
			"seq_cst",
			"thread_fence",
			"store_explicit",
			"relaxed",
			"load_explicit",
			"fetch",
			"store",
			"load",
			"store",
			"run\\(",
			"store",
			"uint",
			"numTasks",
			"AddTasks",
			"AddTask",
			"std::size_t",
			"freeFiber"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\\t",
			"memory_slot",
			"MemorySlot",
			"\\1+1",
			"",
			"NR_PARTICLES",
			"\\t",
			"V2",
			"v2"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 148.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 112.0
	},
	"pinned_build_system": "Packages/User/build_rnd.sublime-build",
	"project": "rnd.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"build",
				"build_all.sh"
			],
			[
				"pares",
				"utils/parser.cpp"
			],
			[
				"openglrunpar",
				"opengl/run_parser.sh"
			],
			[
				"openglbui",
				"opengl/build.sh"
			],
			[
				"parseandcom",
				"opencl/parse_and_compile.sh"
			],
			[
				"common",
				"utils/common.h"
			],
			[
				"builda",
				"build_all.sh"
			],
			[
				"matrix",
				"RnD/utils/matrix.inl"
			],
			[
				"triangle",
				"RnD/fibers/tests/triangle_number/calc_triangle_num.cpp"
			],
			[
				"wait",
				"RnD/fibers/wait_free_queue_old.h"
			],
			[
				"task",
				"RnD/fibers/task_scheduler.cpp"
			],
			[
				"tasksc",
				"RnD/fibers/task_scheduler copy.cpp"
			],
			[
				"main",
				"RnD/fibers/main.cpp"
			],
			[
				"fiber",
				"RnD/fibers/fiber.h"
			],
			[
				"fibers",
				"RnD/fibers/fibers"
			],
			[
				"builds",
				"RnD/fibers/build.sh"
			],
			[
				"jmp",
				"RnD/fibers/asm/jump_x86_64_ms_pe_gas.S"
			],
			[
				"memorare",
				"RnD/utils/memory_arena.cpp"
			],
			[
				"memory",
				"RnD/fibers/memory.h"
			],
			[
				"memoryare",
				"RnD/utils/memory_arena.cpp"
			],
			[
				"buildsh",
				"RnD/fibers/build.sh"
			],
			[
				"fibuild",
				"RnD/fibers/build.sh"
			],
			[
				"waitfr",
				"RnD/fibers/wait_free_queue_old.h"
			],
			[
				"free",
				"RnD/fibers/wait_free_queue.h"
			],
			[
				"tasks",
				"RnD/fibers/task_scheduler.cpp"
			],
			[
				"memo",
				"RnD/fibers/memory.h"
			],
			[
				"config",
				"RnD/fibers/config.h"
			],
			[
				"waitf",
				"RnD/fibers/source/wait_free_queue_old.h"
			],
			[
				"fiberh",
				"RnD/fibers/source/task_scheduler.h"
			],
			[
				"fluid",
				"RnD/shaders/fluid_common.cl"
			],
			[
				"memor",
				"RnD/utils/memory_arena.cpp"
			],
			[
				"brao",
				"RnD/utils/broadphase.h"
			],
			[
				"hashma",
				"RnD/utils/hashmap.h"
			],
			[
				"profie",
				"RnD/utils/profiler.c"
			],
			[
				"sortbe",
				"RnD/testing and benchmarks/sorting/quick_sort_benchmark.cpp"
			],
			[
				"sort",
				"RnD/testing and benchmarks/sorting/quick_sort_benchmark.cpp"
			],
			[
				"fluidspp",
				"RnD/source/fluid_spook_pthread.cpp"
			],
			[
				"fluidcom",
				"RnD/source/fluid_common.cpp"
			],
			[
				"fluidmp",
				"RnD/source/fluid_mpm.cpp"
			],
			[
				"fluidc",
				"RnD/source/fluid.cpp"
			],
			[
				"parser",
				"RnD/utils/parser.cpp"
			],
			[
				"shader",
				"RnD/shaders/shader.vert"
			],
			[
				"openggl",
				"RnD/opengl/gl_parser.cpp"
			],
			[
				"buiba",
				"RnD/libclang/build.bat"
			],
			[
				"type",
				"RnD/generated/type_info.generated.cpp"
			],
			[
				"layou",
				"RnD/generated/reload_data_layout.generated.cpp"
			],
			[
				"app.",
				"RnD/source/app.cpp"
			],
			[
				"game.c",
				"RnD/genome/Scripts/Environment/AEnvironment.cs"
			],
			[
				"mall",
				"RnD/utils/dlmalloc.c"
			],
			[
				"dlmall",
				"RnD/utils/dlmalloc.c"
			],
			[
				"shader.vert",
				"RnD/shaders/shader.vert"
			],
			[
				"runpar",
				"RnD/opengl/run_parser.sh"
			],
			[
				"setupver",
				"RnD/generated/setup_vertex_array.cpp"
			],
			[
				"fluidkern",
				"RnD/generated/fluid_kernel.generated.cpp"
			],
			[
				"reload",
				"RnD/reload/reloader.cpp"
			],
			[
				"gui",
				"RnD/utils/gui.cpp"
			],
			[
				"fluidker",
				"RnD/generated/fluid_kernel.generated.cpp"
			],
			[
				"teapo",
				"RnD/external tools/obj_compiler/teapot.obj"
			],
			[
				"app",
				"RnD/source/app.cpp"
			],
			[
				"inter",
				"RnD/source/interface.cpp"
			],
			[
				"color",
				"RnD/external tools/obj_compiler/colorcube.obj"
			],
			[
				"math",
				"RnD/utils/math.inl"
			],
			[
				"pare",
				"RnD/utils/parser.cpp"
			],
			[
				"obj",
				"RnD/external tools/obj_compiler/obj_compiler.cpp"
			],
			[
				"test.",
				"RnD/shaders/test.vert"
			],
			[
				"shaderg",
				"RnD/shaders/shader.frag"
			],
			[
				"test",
				"RnD/shaders/test.frag"
			],
			[
				"buffer",
				"RnD/source/buffer.cpp"
			],
			[
				"glprogram",
				"RnD/opengl/gl_program_builder.cpp"
			],
			[
				"parseda",
				"RnD/reload/parse_data_layout.cpp"
			],
			[
				"sring",
				"RnD/utils/string_utils.inl"
			],
			[
				"glmanage",
				"RnD/opengl/gl_manager.cpp"
			],
			[
				"strings",
				"RnD/utils/string_utils.inl"
			],
			[
				"proif",
				"RnD/utils/profiler.c"
			],
			[
				"stringu",
				"RnD/utils/string_utils.inl"
			],
			[
				"bui",
				"RnD/genome/build.sh"
			],
			[
				"string",
				"RnD/utils/string_utils.inl"
			],
			[
				"mandel",
				"RnD/testing and benchmarks/mandelbrot/mandelbrot.c"
			],
			[
				"mand",
				"RnD/testing and benchmarks/mandelbrot/mandelbrot.c"
			],
			[
				"raw32",
				"Scripts/Genome/GenomeBinaryStringRaw32.cs"
			],
			[
				"builddy",
				"RnD/build_dylib.sh"
			],
			[
				"vector",
				"RnD/utils/vectorization.h"
			],
			[
				"matri",
				"RnD/utils/matrix.inl"
			],
			[
				"spoo",
				"source/fluid_spook.cpp"
			],
			[
				"fluidcomcp",
				"source/fluid_common.cpp"
			],
			[
				"compute",
				"shaders/compute_shader.cl"
			],
			[
				"spook",
				"source/fluid_spook.cpp"
			],
			[
				"fluidp",
				"source/fluid_spook_pthread.cpp"
			],
			[
				"fluidcomm",
				"source/fluid_common.cpp"
			],
			[
				"buildd",
				"build_dylib.sh"
			],
			[
				"vert",
				"shaders/shader.vert"
			],
			[
				"shadver",
				"shaders/shader.vert"
			],
			[
				"frag",
				"shaders/shader.frag"
			],
			[
				"kerne",
				"generated/fluid_kernel.generated.cpp"
			],
			[
				"fluidmull",
				"source/fluid_muller.cpp"
			],
			[
				"comp",
				"shaders/compute_shader.cl"
			],
			[
				"clman",
				"opencl/cl_manager.cpp"
			],
			[
				"fluidsp",
				"source/fluid_spook.cpp"
			],
			[
				"shade",
				"shaders/shader.frag"
			],
			[
				"prof",
				"utils/profiler.c"
			],
			[
				"fludicom",
				"shaders/fluid_common.cl"
			],
			[
				"flu",
				"source/fluid.cpp"
			],
			[
				"fluidmu",
				"source/fluid_muller.cpp"
			],
			[
				"sharder",
				"shaders/shader.frag"
			],
			[
				"shad",
				"shaders/compute_shader.cl"
			],
			[
				"flui",
				"shaders/fluid_common.cl"
			],
			[
				"buid",
				"build_dylib.sh"
			],
			[
				"shaderver",
				"shaders/shader.vert"
			],
			[
				"comm",
				"utils/common.h"
			],
			[
				"co",
				"glfw/cocoa_init.m"
			],
			[
				"mathin",
				"utils/math.inl"
			],
			[
				"bud",
				"build_dylib.sh"
			],
			[
				"buil",
				"build_all.sh"
			],
			[
				"vec",
				"utils/vectorization.h"
			],
			[
				"mande",
				"testing and benchmarks/mandelbrot/mandelbrot.c"
			],
			[
				"pro",
				"utils/profiler.c"
			],
			[
				"shaderfra",
				"shaders/shader.frag"
			],
			[
				"fluidco",
				"source/fluid copy.cpp"
			],
			[
				"fluidcl",
				"shaders/fluid_common.cl"
			],
			[
				"shadflu",
				"shaders/fluid_common.cl"
			],
			[
				"shadrc",
				"shaders/compute_shader.cl"
			],
			[
				"shafr",
				"shaders/shader.frag"
			],
			[
				"mat",
				"utils/math.inl"
			],
			[
				"generated",
				"generated/fluid_kernel.cpp"
			],
			[
				"buff",
				"source/buffer.cpp"
			],
			[
				"mygl",
				"mygl/mygl.m"
			],
			[
				"my",
				"mygl/mygl.h"
			],
			[
				"bu",
				"build_all.sh"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Programming/C/Game/game.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"UAvatarComponent"
			]
		],
		"width": 395.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 3
	}
}
